// <auto-generated />
using System;
using Buses;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace buses.Migrations
{
    [DbContext(typeof(BusesContext))]
    partial class BusesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Buses.Models.Bus", b =>
                {
                    b.Property<int>("IdBus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdBus");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdBus"));

                    b.Property<string>("CodigoBus")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CodigoBus");

                    b.Property<int?>("EsHabilitado")
                        .HasColumnType("int")
                        .HasColumnName("EsHabilitado");

                    b.Property<int>("Kilometraje")
                        .HasColumnType("int")
                        .HasColumnName("Kilometraje");

                    b.HasKey("IdBus")
                        .HasName("PRIMARY");

                    b.ToTable("buses", (string)null);
                });

            modelBuilder.Entity("Buses.Models.Chofer", b =>
                {
                    b.Property<int>("IdChofer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdChofer");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdChofer"));

                    b.Property<int>("EsHabilitado")
                        .HasColumnType("int")
                        .HasColumnName("EsHabilitado");

                    b.Property<int>("Kilometraje")
                        .HasColumnType("int")
                        .HasColumnName("Kilometraje");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre");

                    b.Property<string>("Rut")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Rut");

                    b.HasKey("IdChofer")
                        .HasName("PRIMARY");

                    b.ToTable("chofer", (string)null);
                });

            modelBuilder.Entity("Buses.Models.RegistroViaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BusIdBus")
                        .HasColumnType("int");

                    b.Property<int>("ChoferIdChofer")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdBus")
                        .HasColumnType("int");

                    b.Property<int>("IdChofer")
                        .HasColumnType("int");

                    b.Property<int>("IdTramo")
                        .HasColumnType("int");

                    b.Property<int>("IdViaje")
                        .HasColumnType("int");

                    b.Property<int>("TramoIdTramo")
                        .HasColumnType("int");

                    b.Property<int>("ViajeIdViaje")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusIdBus");

                    b.HasIndex("ChoferIdChofer");

                    b.HasIndex("TramoIdTramo");

                    b.HasIndex("ViajeIdViaje");

                    b.ToTable("RegistroViajes");
                });

            modelBuilder.Entity("Buses.Models.Tramo", b =>
                {
                    b.Property<int>("IdTramo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdTramo");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdTramo"));

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Destino");

                    b.Property<int>("Distancia")
                        .HasColumnType("int")
                        .HasColumnName("Distancia");

                    b.Property<string>("Origen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Origen");

                    b.HasKey("IdTramo")
                        .HasName("PRIMARY");

                    b.ToTable("tramo", (string)null);
                });

            modelBuilder.Entity("Buses.Models.Viaje", b =>
                {
                    b.Property<int>("IdViaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdViaje");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdViaje"));

                    b.Property<int>("BusId")
                        .HasColumnType("int");

                    b.Property<int>("BusIdBus")
                        .HasColumnType("int");

                    b.Property<int>("ChoferId")
                        .HasColumnType("int");

                    b.Property<int>("ChoferIdChofer")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("Fecha");

                    b.Property<int>("TramoId")
                        .HasColumnType("int");

                    b.Property<int>("TramoIdTramo")
                        .HasColumnType("int");

                    b.HasKey("IdViaje")
                        .HasName("PRIMARY");

                    b.HasIndex("BusId");

                    b.HasIndex("BusIdBus");

                    b.HasIndex("ChoferId");

                    b.HasIndex("ChoferIdChofer");

                    b.HasIndex("TramoId");

                    b.HasIndex("TramoIdTramo");

                    b.ToTable("viaje", (string)null);
                });

            modelBuilder.Entity("Buses.Models.RegistroViaje", b =>
                {
                    b.HasOne("Buses.Models.Bus", "Bus")
                        .WithMany()
                        .HasForeignKey("BusIdBus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Buses.Models.Chofer", "Chofer")
                        .WithMany()
                        .HasForeignKey("ChoferIdChofer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Buses.Models.Tramo", "Tramo")
                        .WithMany()
                        .HasForeignKey("TramoIdTramo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Buses.Models.Viaje", "Viaje")
                        .WithMany()
                        .HasForeignKey("ViajeIdViaje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("Chofer");

                    b.Navigation("Tramo");

                    b.Navigation("Viaje");
                });

            modelBuilder.Entity("Buses.Models.Viaje", b =>
                {
                    b.HasOne("Buses.Models.Bus", null)
                        .WithMany()
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Viaje_Bus");

                    b.HasOne("Buses.Models.Bus", "Bus")
                        .WithMany()
                        .HasForeignKey("BusIdBus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Buses.Models.Chofer", null)
                        .WithMany()
                        .HasForeignKey("ChoferId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Viaje_Chofer");

                    b.HasOne("Buses.Models.Chofer", "Chofer")
                        .WithMany()
                        .HasForeignKey("ChoferIdChofer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Buses.Models.Tramo", null)
                        .WithMany()
                        .HasForeignKey("TramoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Viaje_Tramo");

                    b.HasOne("Buses.Models.Tramo", "Tramo")
                        .WithMany()
                        .HasForeignKey("TramoIdTramo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("Chofer");

                    b.Navigation("Tramo");
                });
#pragma warning restore 612, 618
        }
    }
}
